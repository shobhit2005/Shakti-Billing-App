<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>SHAKTI BILLING SOFTWARE — Vyapar-like Clone</title>
  <!-- Libraries: html2pdf for PDF, QRious for QR code generation -->
  <script src="https://unpkg.com/html2pdf.js@0.9.3/dist/html2pdf.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/qrious@4.0.2/dist/qrious.min.js"></script>
  <style>
    :root{ --bg:#f3f6fb; --card:#ffffff; --muted:#6b7280; --accent:#0ea5a4; --accent2:#7c3aed; --danger:#ef4444; --radius:16px; font-family:Inter,system-ui,Segoe UI,Roboto,Arial; }
    *{box-sizing:border-box}
    body{margin:0;background:linear-gradient(180deg,#e6eefb 0%, #f8fafc 100%);color:#0f1724}
    .app{display:flex;min-height:100vh}
    .sidebar{width:300px;padding:24px;background:linear-gradient(180deg,#0f1724,#071033);color:#fff}
    .brand{display:flex;align-items:center;gap:12px}
    .logo{width:64px;height:64px;border-radius:12px;background:linear-gradient(135deg,#06b6d4,#7c3aed);display:flex;align-items:center;justify-content:center;font-weight:800}
    .nav{margin-top:32px;display:flex;flex-direction:column;gap:8px}
    .nav button{background:transparent;border:0;color:inherit;padding:12px;border-radius:8px;text-align:left;cursor:pointer;transition:background 0.2s}
    .nav button:hover{background:rgba(255,255,255,0.08)}
    .nav button.active{background:rgba(255,255,255,0.04)}
    main{flex:1;padding:32px}
    .topbar{display:flex;justify-content:space-between;align-items:center;gap:16px}
    .cards{display:flex;gap:16px;margin-top:24px}
    .card{background:var(--card);padding:20px;border-radius:var(--radius);box-shadow:0 6px 18px rgba(15,23,36,0.06);flex:1}
    h2{margin:0}
    .panel{background:var(--card);padding:24px;border-radius:var(--radius);box-shadow:0 6px 18px rgba(15,23,36,0.06);margin-top:24px}
    table{width:100%;border-collapse:collapse}
    th,td{padding:12px;border-bottom:1px solid #eef2f7}
    th{color:var(--muted);font-weight:700}
    .btn{padding:10px 16px;border-radius:8px;border:0;cursor:pointer;transition:all 0.2s}
    .btn:hover{opacity:0.9}
    .btn.primary{background:linear-gradient(90deg,var(--accent2),var(--accent));color:white}
    .btn.ghost{background:transparent;border:1px solid #e6eefb}
    input,select,textarea{padding:10px;border-radius:8px;border:1px solid #e6eefb;width:100%}
    .form-row{display:flex;gap:12px}
    .small{font-size:13px;color:var(--muted)}
    .invoice-prop{display:flex;gap:12px;align-items:center}
    .right{text-align:right}
    @media(max-width:980px){.sidebar{display:none}.cards{flex-direction:column}}
    /* live-edit inputs in lines */
    .line-input{width:100%;padding:8px;border-radius:8px;border:1px solid #e6eefb}
    .danger{background:transparent;color:var(--danger);border:0;padding:8px 12px;border-radius:8px;cursor:pointer}
    .small-muted{font-size:12px;color:#94a3b8}
  </style>
</head>
<body>
  <div class="app">
    <aside class="sidebar">
      <div class="brand">
        <img src="https://uploads.onecompiler.io/43prr38hc/43wp2ebnx/logo-search-grid-2x.png" alt="Logo" id="sidebarLogo" style="width:64px;height:64px;border-radius:12px;">
        <div>
          <div style="font-weight:800">SHAKTI BILLING SOFTWARE</div>
          <div class="small">Vyapar-style billing — local & fast</div>
          <input type="file" id="logoUpload" accept="image/*" style="margin-top:8px;font-size:12px" />
        </div>
      </div>
      <nav class="nav">
        <button class="active" data-view="dashboard">Dashboard</button>
        <button data-view="sales">Sales / Invoices</button>
        <button data-view="inventory">Inventory</button>
        <button data-view="parties">Customers & Suppliers</button>
        <button data-view="settings">Settings</button>
      </nav>
    </aside>

    <main>
      <div class="topbar">
        <div>
          <h2>Dashboard</h2>
          <div class="small">Manage sales, GST invoices and quick billing</div>
        </div>
        <div style="display:flex;gap:12px;align-items:center">
          <button class="btn ghost" id="exportBtn">Export</button>
          <button class="btn primary" id="newInvoiceBtn">+ New Invoice</button>
        </div>
      </div>

      <div class="cards">
        <div class="card">
          <div class="small">Total Sales</div>
          <h3 id="statSales">₹0.00</h3>
        </div>
        <div class="card">
          <div class="small">Receivables</div>
          <h3 id="statReceivables">₹0.00</h3>
        </div>
        <div class="card">
          <div class="small">Total Items</div>
          <h3 id="statItems">0</h3>
        </div>
      </div>

      <section id="view-dashboard" class="panel">
        <div style="display:flex;justify-content:space-between;align-items:center">
          <h3 style="margin:0">Recent Sales</h3>
          <div class="small">Quick reports</div>
        </div>
        <div style="margin-top:16px;overflow:auto">
          <table id="recentSalesTable">
            <thead><tr><th>Invoice</th><th>Customer</th><th>Date</th><th>Amount</th></tr></thead>
            <tbody></tbody>
          </table>
        </div>
      </section>

      <!-- Sales / Invoice builder -->
      <section id="view-sales" style="display:none">
        <div class="panel">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <h3>Invoices</h3>
            <div style="display:flex;gap:12px;align-items:center">
              <label class="small-muted">Filter:</label>
              <select id="invoicesFilter">
                <option value="all">All</option>
                <option>Sale</option>
                <option>Purchase</option>
                <option>Estimate</option>
                <option>Quotation</option>
                <option>Sale Order</option>
                <option>Purchase Order</option>
              </select>
              <button class="btn ghost" id="filterBtn">Apply</button>
              <button class="btn primary" id="createInvoiceBtn">Create Invoice</button>
            </div>
          </div>

          <div style="margin-top:16px;overflow:auto">
            <table id="invoicesList">
              <thead><tr><th>#</th><th>Type</th><th>Customer</th><th>Date</th><th>Amount</th><th>Status</th><th>Actions</th></tr></thead>
              <tbody></tbody>
            </table>
          </div>
        </div>

        <div id="invoiceEditor" class="panel" style="margin-top:16px;display:none">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <h3>Create GST Invoice</h3>
            <div class="invoice-prop">
              <label>Invoice type</label>
              <select id="invoiceType">
                <option>Sale</option>
                <option>Purchase</option>
                <option>Estimate</option>
                <option>Quotation</option>
                <option>Sale Order</option>
                <option>Purchase Order</option>
              </select>
            </div>
          </div>

          <div style="margin-top:16px;display:flex;gap:16px;align-items:flex-start">
            <div style="flex:1">
              <label>Customer (type or select)</label>
              <input id="partyInput" list="partyList" placeholder="Type or select customer" />
              <datalist id="partyList"></datalist>

              <div style="display:flex;gap:12px;margin-top:12px">
                <div style="flex:1">
                  <label>Invoice No</label>
                  <input id="invNo" readonly />
                </div>
                <div style="width:200px">
                  <label>Date</label>
                  <input id="invDate" type="date" />
                </div>
              </div>

              <div style="margin-top:12px" id="selectedPartyDetails" class="small-muted"></div>
            </div>

            <div style="width:420px">
              <label>Company</label>
              <input id="companyName" />
              <label style="margin-top:12px">Company GST (optional)</label>
              <input id="companyGST" />
              <div style="display:flex;gap:12px;margin-top:12px">
                <button class="btn ghost" id="saveDraftBtn">Save Draft</button>
                <button class="btn primary" id="proceedToLines">Add Items</button>
              </div>
            </div>
          </div>

          <div id="invoiceLinesSection" style="display:none;margin-top:16px">
            <div style="display:flex;gap:12px;align-items:center">
              <!-- item input with datalist for typing or selecting -->
              <input id="itemInput" list="itemList" placeholder="Type or select item" />
              <datalist id="itemList"></datalist>

              <input id="itemDesc" placeholder="Description" style="width:240px" />
              <input id="lineQty" type="number" value="1" style="width:90px" />
              <input id="lineRate" type="number" value="0" style="width:120px" />
              <!-- GST select: only 5,12,18,28 -->
              <select id="lineTax" style="width:100px">
                <option value="5">5%</option>
                <option value="12">12%</option>
                <option value="18" selected>18%</option>
                <option value="28">28%</option>
              </select>
              <button class="btn primary" id="addLineBtn">Add</button>
            </div>

            <div style="margin-top:16px;overflow:auto">
              <table id="invoiceLinesTable"><thead><tr><th>Item</th><th>Description</th><th>Qty</th><th>Rate</th><th>Tax%</th><th>Total</th><th></th></tr></thead><tbody></tbody></table>
            </div>

            <div style="display:flex;justify-content:flex-end;gap:16px;margin-top:16px">
              <div style="width:360px;background:#f8fafc;padding:16px;border-radius:8px">
                <div style="display:flex;justify-content:space-between"><div class="small">Subtotal</div><div id="invSubtotal">₹0</div></div>
                <div style="display:flex;justify-content:space-between"><div class="small">Total Tax</div><div id="invTax">₹0</div></div>
                <div style="display:flex;justify-content:space-between;align-items:center"><div class="small">Discount</div><input id="invDiscount" type="number" value="0" style="width:120px" /></div>
                <hr>
                <div style="display:flex;justify-content:space-between;font-weight:700"><div>Total</div><div id="invTotal">₹0</div></div>

                <div style="margin-top:12px">
                  <label class="small">Terms & Conditions</label>
                  <textarea id="invTerms" placeholder="Enter terms & conditions" style="height:84px"></textarea>
                </div>

                <div style="display:flex;gap:12px;justify-content:flex-end;margin-top:12px">
                  <button class="btn ghost" id="previewInvoiceBtn">Preview PDF</button>
                  <button class="btn primary" id="downloadInvoiceBtn">Download PDF</button>
                </div>
              </div>
            </div>
          </div>

        </div>
      </section>

      <!-- Inventory -->
      <section id="view-inventory" style="display:none">
        <div class="panel">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <h3>Inventory</h3>
            <button class="btn primary" id="addItemBtn">+ Add Item</button>
          </div>
          <div style="margin-top:16px;overflow:auto">
            <table id="itemsTable"><thead><tr><th>SKU</th><th>Item</th><th>Stock</th><th>Price</th><th>GST%</th><th>Actions</th></tr></thead><tbody></tbody></table>
          </div>
        </div>

        <div id="itemEditor" class="panel" style="display:none;margin-top:16px">
          <h3>Add / Edit Item</h3>
          <div style="display:flex;gap:12px">
            <div style="flex:1">
              <label>SKU</label><input id="itemSKU" />
              <label style="margin-top:12px">Name</label><input id="itemName" />
              <label style="margin-top:12px">Category</label><input id="itemCat" />
            </div>
            <div style="width:240px">
              <label>Stock</label><input id="itemStock" type="number" />
              <label style="margin-top:12px">Price</label><input id="itemPrice" type="number" />
              <label style="margin-top:12px">GST %</label><input id="itemGST" type="number" />
            </div>
          </div>
          <div style="display:flex;gap:12px;justify-content:flex-end;margin-top:12px">
            <button class="btn ghost" id="cancelItemBtn">Cancel</button>
            <button class="btn primary" id="saveItemBtn">Save Item</button>
          </div>
        </div>
      </section>

      <!-- Parties -->
      <section id="view-parties" style="display:none">
        <div class="panel">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <h3>Customers & Suppliers</h3>
            <button class="btn primary" id="addPartyBtn">+ Add Party</button>
          </div>
          <div style="margin-top:16px;overflow:auto">
            <table id="partiesTable"><thead><tr><th>Name</th><th>Type</th><th>GST</th><th>Phone</th><th>Address</th><th>Actions</th></tr></thead><tbody></tbody></table>
          </div>
        </div>

        <div id="partyEditor" class="panel" style="display:none;margin-top:16px">
          <h3>Add / Edit Party</h3>
          <div style="display:flex;gap:12px">
            <div style="flex:1">
              <label>Name</label><input id="partyName" />
              <label style="margin-top:12px">Contact (Phone)</label><input id="partyContact" />
              <label style="margin-top:12px">Address</label><textarea id="partyAddress"></textarea>
            </div>
            <div style="width:240px">
              <label>Type</label>
              <select id="partyType"><option value="customer">Customer</option><option value="supplier">Supplier</option></select>
              <label style="margin-top:12px">GST (optional)</label><input id="partyGST" />
            </div>
          </div>
          <div style="display:flex;gap:12px;justify-content:flex-end;margin-top:12px">
            <button class="btn ghost" id="cancelPartyBtn">Cancel</button>
            <button class="btn primary" id="savePartyBtn">Save</button>
          </div>
        </div>
      </section>

      <section id="view-settings" style="display:none" class="panel">
        <h3>Settings</h3>
        <label>Company name</label><input id="settingsCompany" value="SHAKTI BILLING SOFTWARE" />
        <label style="margin-top:12px">Default currency</label><input id="settingsCurrency" value="₹" />
        <label style="margin-top:12px">UPI ID for payments (for QR)</label><input id="settingsUpi" placeholder="example@upi" />
        <div style="display:flex;gap:12px;justify-content:flex-end;margin-top:12px"><button class="btn primary" id="saveSettingsBtn">Save</button></div>
      </section>

    </main>
  </div>

  <script>
    // Basic local DB (keeps same structure you had)
    const DB = { items:[], parties:[], invoices:[], settings:{company:'SHAKTI BILLING SOFTWARE', currency:'₹', upi:''} };

    function save(){ localStorage.setItem('shakti_billing_db', JSON.stringify(DB)); }
    function load(){ const raw = localStorage.getItem('shakti_billing_db'); if(raw){ Object.assign(DB, JSON.parse(raw)); } }

    // utils
    const qs = s => document.querySelector(s); const qsa = s => Array.from(document.querySelectorAll(s));
    function uid(p='id'){ return p + '_' + Math.random().toString(36).slice(2,9); }

    // Navigation (keeps same)
    qsa('.nav button').forEach(b=>b.addEventListener('click', ()=>{
      qsa('.nav button').forEach(x=>x.classList.remove('active')); b.classList.add('active');
      const view = b.dataset.view; qsa('[id^="view-"]').forEach(v=>v.style.display = v.id === 'view-'+view ? 'block' : 'none');
      // If switching to invoices list, refresh filter
      if(view === 'sales') renderInvoicesList();
      if(view === 'dashboard') renderStats();
      if(view === 'parties') renderParties();
      if(view === 'inventory') renderItems();
    }));

    // init
    load();
    // seed small defaults if empty
    if(!DB.settings) DB.settings = {company:'SHAKTI BILLING SOFTWARE', currency:'₹', upi:''};
    if(DB.parties.length === 0){
      DB.parties.push({id: uid('party'), name: 'Walk-in Customer', type:'customer', contact:'', addr:'', gst:''});
    }
    if(DB.items.length === 0){
      DB.items.push({id: uid('item'), sku:'SKU-001', name:'Sample Item', cat:'General', stock:10, price:100, gst:18});
    }

    renderStats(); renderRecentSales(); renderItems(); renderParties(); renderInvoicesList(); populateDatalists();

    // --- Items ---
    qs('#addItemBtn').addEventListener('click', ()=>{ qs('#itemEditor').style.display='block'; qs('#itemSKU').value=''; qs('#itemName').value=''; qs('#itemCat').value=''; qs('#itemStock').value=0; qs('#itemPrice').value=0; qs('#itemGST').value=0; qs('#saveItemBtn').dataset.edit=''; });
    qs('#cancelItemBtn').addEventListener('click', ()=>qs('#itemEditor').style.display='none');
    qs('#saveItemBtn').addEventListener('click', ()=>{
      const sku = qs('#itemSKU').value || uid('SKU'); const name = qs('#itemName').value; const cat = qs('#itemCat').value;
      const stock = Number(qs('#itemStock').value||0); const price = Number(qs('#itemPrice').value||0); const gst = Number(qs('#itemGST').value||0);
      if(!name){ alert('Name required'); return; }
      const edit = qs('#saveItemBtn').dataset.edit;
      if(edit){ const it = DB.items.find(i=>i.id===edit); Object.assign(it,{sku,name,cat,stock,price,gst}); }
      else { DB.items.push({id:uid('item'), sku,name,cat,stock,price,gst}); }
      save(); renderItems(); populateDatalists(); renderStats(); qs('#itemEditor').style.display='none';
    });

    function renderItems(){
      const tbody = qs('#itemsTable tbody'); tbody.innerHTML='';
      DB.items.forEach(it=>{
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${it.sku}</td><td>${it.name}</td><td>${it.stock}</td><td>₹ ${it.price.toFixed(2)}</td><td>${it.gst}%</td><td><button class="btn ghost" data-action="edit" data-id="${it.id}">Edit</button> <button class="btn danger" data-action="del" data-id="${it.id}">Delete</button></td>`;
        tbody.appendChild(tr);
      });
    }
    qs('#itemsTable').addEventListener('click', e=>{
      const b = e.target.closest('button'); if(!b) return; const id = b.dataset.id; const act = b.dataset.action;
      if(act==='edit'){ const it = DB.items.find(x=>x.id===id); qs('#itemEditor').style.display='block'; qs('#itemSKU').value = it.sku; qs('#itemName').value = it.name; qs('#itemCat').value = it.cat; qs('#itemStock').value = it.stock; qs('#itemPrice').value = it.price; qs('#itemGST').value = it.gst; qs('#saveItemBtn').dataset.edit = id; }
      if(act==='del'){ if(confirm('Delete item?')){ DB.items = DB.items.filter(x=>x.id!==id); save(); renderItems(); populateDatalists(); renderStats(); } }
    });

    // --- Parties ---
    qs('#addPartyBtn').addEventListener('click', ()=>{ qs('#partyEditor').style.display='block'; qs('#partyName').value=''; qs('#partyContact').value=''; qs('#partyAddress').value=''; qs('#partyGST').value=''; qs('#partyType').value='customer'; qs('#savePartyBtn').dataset.edit=''; });
    qs('#cancelPartyBtn').addEventListener('click', ()=>qs('#partyEditor').style.display='none');
    qs('#savePartyBtn').addEventListener('click', ()=>{
      const name = qs('#partyName').value; if(!name){ alert('Name needed'); return; }
      const type = qs('#partyType').value; const contact = qs('#partyContact').value; const addr = qs('#partyAddress').value; const gst = qs('#partyGST').value;
      const edit = qs('#savePartyBtn').dataset.edit;
      if(edit){ Object.assign(DB.parties.find(p=>p.id===edit), {name, type, contact, addr, gst}); }
      else { DB.parties.push({id:uid('party'), name, type, contact, addr, gst, balance:0}); }
      save(); renderParties(); populateDatalists(); qs('#partyEditor').style.display='none';
    });

    function renderParties(){
      const tbody = qs('#partiesTable tbody'); tbody.innerHTML='';
      DB.parties.forEach(p=>{
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${p.name}</td><td>${p.type}</td><td>${p.gst||'-'}</td><td>${p.contact||'-'}</td><td>${p.addr||'-'}</td><td><button class="btn ghost" data-action="edit" data-id="${p.id}">Edit</button> <button class="btn danger" data-action="del" data-id="${p.id}">Delete</button></td>`;
        tbody.appendChild(tr);
      });
    }
    qs('#partiesTable').addEventListener('click', e=>{
      const b = e.target.closest('button'); if(!b) return; const id = b.dataset.id; const act = b.dataset.action;
      if(act==='edit'){ const p = DB.parties.find(x=>x.id===id); qs('#partyEditor').style.display='block'; qs('#partyName').value=p.name; qs('#partyContact').value=p.contact; qs('#partyAddress').value=p.addr; qs('#partyGST').value=p.gst; qs('#partyType').value=p.type; qs('#savePartyBtn').dataset.edit=id; }
      if(act==='del'){ if(confirm('Delete party?')){ DB.parties = DB.parties.filter(x=>x.id!==id); save(); renderParties(); populateDatalists(); } }
    });

    // populate datalists for typing/selecting
    function populateDatalists(){
      const pList = qs('#partyList'); pList.innerHTML='';
      DB.parties.filter(p=>p.type==='customer').forEach(p=>{ const o = document.createElement('option'); o.value = p.name; pList.appendChild(o); });
      const itemList = qs('#itemList'); itemList.innerHTML='';
      DB.items.forEach(it=>{ const o = document.createElement('option'); o.value = it.name; itemList.appendChild(o); });
    }

    // --- Invoice flow ---
    qs('#newInvoiceBtn').addEventListener('click', ()=>{ document.querySelector('[data-view="sales"]').click(); qs('#createInvoiceBtn').click(); });
    // createInvoiceBtn opens editor
    qs('#createInvoiceBtn').addEventListener('click', ()=>{
      qs('#invoiceEditor').style.display='block'; qs('#invNo').value = makeInvNo(); qs('#invDate').value = new Date().toISOString().slice(0,10);
      qs('#companyName').value = DB.settings.company || 'SHAKTI BILLING SOFTWARE';
      currentLines = []; renderInvoiceLines(); qs('#invoiceLinesSection').style.display='none'; populateDatalists();
      qs('#selectedPartyDetails').textContent = '';
      qs('#partyInput').value = '';
      qs('#companyGST').value = DB.settings.companyGST || '';
      qs('#invTerms').value = '';
      updateInvoiceTotals();
    });

    function makeInvNo(){ const n = DB.invoices.length + 1; return 'SB-' + new Date().getFullYear() + '-' + String(n).padStart(4,'0'); }

    qs('#proceedToLines').addEventListener('click', ()=>{ qs('#invoiceLinesSection').style.display='block'; populateDatalists(); });

    let currentLines = [];

    // When user types/selects a party, show details if exist
    qs('#partyInput').addEventListener('input', (e)=>{
      const name = e.target.value.trim();
      const p = DB.parties.find(x=>x.name.toLowerCase() === name.toLowerCase());
      if(p){
        qs('#selectedPartyDetails').textContent = `${p.name} • GST: ${p.gst || '-'} • Phone: ${p.contact || '-'} • ${p.addr || ''}`;
      } else {
        qs('#selectedPartyDetails').textContent = '';
      }
    });

    // Add line: use datalist item fallback, description, qty, rate, tax (select only 5/12/18/28)
    qs('#addLineBtn').addEventListener('click', ()=>{
      const itemName = qs('#itemInput').value.trim(); if(!itemName){ alert('Enter or select item'); return; }
      const desc = qs('#itemDesc').value || '';
      const qty = Number(qs('#lineQty').value||0);
      const rateInput = Number(qs('#lineRate').value||0);
      const taxInput = Number(qs('#lineTax').value||0);
      // find item in DB to prefill if exists
      const it = DB.items.find(x=>x.name.toLowerCase()===itemName.toLowerCase());
      const rate = rateInput || (it? it.price : 0);
      const tax = (taxInput === 0 && it) ? it.gst : taxInput; // keep select default if user left 0
      const line = { id: uid('line'), name: itemName, desc, qty, rate, tax };
      currentLines.push(line);
      renderInvoiceLines(); updateInvoiceTotals();
      // clear inputs
      qs('#itemInput').value=''; qs('#itemDesc').value=''; qs('#lineQty').value=1; qs('#lineRate').value=0; qs('#lineTax').value=18;
    });

    function renderInvoiceLines(){
      const tbody = qs('#invoiceLinesTable tbody'); tbody.innerHTML='';
      currentLines.forEach(l=>{
        const total = (l.qty*l.rate) * (1 + (l.tax||0)/100);
        const tr = document.createElement('tr');
        // create editable inputs to change qty/rate/tax or description inline
        tr.innerHTML = `
          <td><input class="line-input" data-id="${l.id}" data-field="name" value="${escapeHtml(l.name)}"></td>
          <td><input class="line-input" data-id="${l.id}" data-field="desc" value="${escapeHtml(l.desc)}"></td>
          <td><input class="line-input" data-id="${l.id}" data-field="qty" type="number" value="${l.qty}"></td>
          <td><input class="line-input" data-id="${l.id}" data-field="rate" type="number" value="${l.rate}"></td>
          <td>
            <select class="line-input" data-id="${l.id}" data-field="tax">
              <option value="5"${l.tax==5?' selected':''}>5%</option>
              <option value="12"${l.tax==12?' selected':''}>12%</option>
              <option value="18"${l.tax==18?' selected':''}>18%</option>
              <option value="28"${l.tax==28?' selected':''}>28%</option>
            </select>
          </td>
          <td>₹ ${total.toFixed(2)}</td>
          <td><button class="btn ghost" data-action="rem" data-id="${l.id}">Remove</button></td>
        `;
        tbody.appendChild(tr);
      });

      // attach listeners for inline edits
      qsa('.line-input').forEach(inp=>{
        inp.addEventListener('input', onLineInputChange);
      });
      qsa('#invoiceLinesTable button').forEach(b=>{
        b.addEventListener('click', (e)=>{
          const id = e.target.dataset.id; currentLines = currentLines.filter(x=>x.id!==id);
          renderInvoiceLines(); updateInvoiceTotals();
        });
      });
    }

    function onLineInputChange(e){
      const id = e.target.dataset.id; const field = e.target.dataset.field; const ln = currentLines.find(l=>l.id===id); if(!ln) return;
      if(field==='name' || field==='desc'){ ln[field] = e.target.value; }
      else { ln[field] = Number(e.target.value||0); }
      // re-render to refresh totals shown
      renderInvoiceLines(); updateInvoiceTotals();
    }

    function updateInvoiceTotals(){
      let sub=0, tax=0;
      currentLines.forEach(l=>{
        const lineVal = l.qty * l.rate;
        sub += lineVal;
        tax += lineVal * (l.tax||0)/100;
      });
      qs('#invSubtotal').textContent = '₹ ' + sub.toFixed(2);
      qs('#invTax').textContent = '₹ ' + tax.toFixed(2);
      const disc = Number(qs('#invDiscount').value||0);
      const grand = sub + tax - disc;
      qs('#invTotal').textContent = '₹ ' + grand.toFixed(2);
    }
    qs('#invDiscount').addEventListener('input', updateInvoiceTotals);

    qs('#previewInvoiceBtn').addEventListener('click', ()=>{
      const html = buildInvoiceHTML(true);
      const w = window.open('', '_blank'); w.document.write(html); w.document.close();
    });

    // download PDF with auto-filled details & SHAKTI BILLING SOFTWARE header + UPI QR (if set)
    qs('#downloadInvoiceBtn').addEventListener('click', ()=>{
      const htmlNode = document.createElement('div'); htmlNode.style.padding='20px'; htmlNode.style.background='white'; htmlNode.style.color='#0b1220'; htmlNode.innerHTML = buildInvoiceHTML(false);

      // add QR if UPI present
      if(DB.settings.upi){
        const total = getCurrentGrandTotal();
        const upiStr = `upi://pay?pa=${encodeURIComponent(DB.settings.upi)}&pn=${encodeURIComponent(DB.settings.company)}&tn=${encodeURIComponent('Invoice')}&am=${total.toFixed(2)}`;
        const qr = new QRious({value: upiStr, size:180});
        const img = document.createElement('img'); img.src = qr.toDataURL(); img.style.marginTop='10px';
        htmlNode.appendChild(img);
      }

      const opt = { margin:10, filename:(qs('#invNo').value || makeInvNo()) + '.pdf', image:{type:'jpeg',quality:0.98}, html2canvas:{scale:2}, jsPDF:{unit:'mm',format:'a4',orientation:'portrait'}};
      html2pdf().set(opt).from(htmlNode).save();
    });

    // save invoice (draft)
    qs('#saveDraftBtn').addEventListener('click', ()=>{
      const inv = collectInvoiceFromUI();
      DB.invoices.push(inv);
      // decrement stock for matching items (if present)
      inv.lines.forEach(l=>{
        const it = DB.items.find(x=>x.name.toLowerCase()===l.name.toLowerCase());
        if(it){ it.stock = Math.max(0, it.stock - l.qty); }
      });
      save(); renderInvoicesList(); renderItems(); renderRecentSales(); renderStats(); alert('Invoice saved');
    });

    function collectInvoiceFromUI(){
      const inv = {
        id: uid('inv'),
        number: qs('#invNo').value || makeInvNo(),
        date: qs('#invDate').value || new Date().toISOString().slice(0,10),
        customerName: qs('#partyInput').value || 'Walk-in',
        company: qs('#companyName').value || DB.settings.company,
        companyGST: qs('#companyGST').value || '',
        lines: JSON.parse(JSON.stringify(currentLines)),
        discount: Number(qs('#invDiscount').value||0),
        type: qs('#invoiceType').value,
        terms: qs('#invTerms').value || ''
      };
      return inv;
    }

    function getCurrentGrandTotal(){
      let sub=0,tax=0;
      currentLines.forEach(l=>{
        const lineVal = l.qty*l.rate; sub+=lineVal; tax+=lineVal*(l.tax||0)/100;
      });
      const disc = Number(qs('#invDiscount').value||0); return sub+tax-disc;
    }

    function buildInvoiceHTML(asPage=true){
      // build HTML using template strings (safe)
      const inv = collectInvoiceFromUI();
      const logoSrc = qs('#sidebarLogo').src;
      let rows = '';
      let subtotal = 0, totaltax = 0;
      inv.lines.forEach(l=>{
        const lineVal = l.qty*l.rate;
        const t = lineVal * (l.tax||0)/100;
        subtotal += lineVal; totaltax += t;
        rows += `<tr>
          <td style="padding:8px;border:1px solid #eee">${escapeHtml(l.name)}</td>
          <td style="padding:8px;border:1px solid #eee">${escapeHtml(l.desc||'')}</td>
          <td style="padding:8px;border:1px solid #eee">${l.qty}</td>
          <td style="padding:8px;border:1px solid #eee">₹ ${Number(l.rate).toFixed(2)}</td>
          <td style="padding:8px;border:1px solid #eee">${l.tax}%</td>
          <td style="padding:8px;border:1px solid #eee">₹ ${(lineVal + t).toFixed(2)}</td>
        </tr>`;
      });
      const total = subtotal + totaltax - (inv.discount||0);
      const html = `
        <div style="font-family:Arial,Helvetica,sans-serif;color:#0b1220;max-width:820px;margin:10px auto;background:white;padding:24px;border-radius:8px;border:1px solid #eee">
          <div style="display:flex;justify-content:space-between;align-items:center">
            <div style="display:flex;align-items:center;gap:16px">
              <img src="${logoSrc}" alt="Logo" style="width:64px;height:64px;border-radius:8px;">
              <div>
                <h1 style="margin:0;font-size:24px">SHAKTI BILLING SOFTWARE</h1>
                <div style="color:#6b7280;font-size:14px">${escapeHtml(inv.company)}</div>
              </div>
            </div>
            <div style="text-align:right">
              <div style="font-size:14px">Invoice: <strong>${escapeHtml(inv.number)}</strong></div>
              <div style="font-size:14px">Date: ${escapeHtml(inv.date)}</div>
              <div style="font-size:14px">Type: ${escapeHtml(inv.type)}</div>
            </div>
          </div>

          <div style="margin-top:24px;display:flex;justify-content:space-between">
            <div>
              <div style="color:#6b7280;font-size:14px">Bill to</div>
              <div style="font-size:16px">${escapeHtml(inv.customerName)}</div>
            </div>
            <div style="text-align:right">
              <div style="color:#6b7280;font-size:14px">Company GST</div>
              <div style="font-size:16px">${escapeHtml(inv.companyGST || '-')}</div>
            </div>
          </div>

          <div style="margin-top:24px;overflow:auto">
            <table style="width:100%;border-collapse:collapse;border:1px solid #eee">
              <thead><tr>
                <th style="padding:8px;background:#f9fafb;border:1px solid #eee;text-align:left">Item</th>
                <th style="padding:8px;background:#f9fafb;border:1px solid #eee;text-align:left">Description</th>
                <th style="padding:8px;background:#f9fafb;border:1px solid #eee;text-align:right">Qty</th>
                <th style="padding:8px;background:#f9fafb;border:1px solid #eee;text-align:right">Rate</th>
                <th style="padding:8px;background:#f9fafb;border:1px solid #eee;text-align:right">Tax%</th>
                <th style="padding:8px;background:#f9fafb;border:1px solid #eee;text-align:right">Total</th>
              </tr></thead>
              <tbody>${rows}</tbody>
            </table>
          </div>

          <div style="margin-top:24px;display:flex;justify-content:flex-end">
            <div style="width:360px;background:#f9fafb;padding:16px;border-radius:8px;border:1px solid #eee">
              <div style="display:flex;justify-content:space-between;font-size:14px"><div>Subtotal</div><div>₹ ${subtotal.toFixed(2)}</div></div>
              <div style="display:flex;justify-content:space-between;font-size:14px"><div>Total Tax</div><div>₹ ${totaltax.toFixed(2)}</div></div>
              <div style="display:flex;justify-content:space-between;font-size:14px"><div>Discount</div><div>₹ ${(inv.discount||0).toFixed(2)}</div></div>
              <hr style="margin:8px 0">
              <div style="display:flex;justify-content:space-between;font-weight:700;font-size:16px"><div>Total</div><div>₹ ${total.toFixed(2)}</div></div>
            </div>
          </div>

          <div style="margin-top:24px">
            <h4 style="margin:0 0 8px;font-size:16px">Terms & Conditions</h4>
            <div style="color:#374151;font-size:14px;line-height:1.5">${escapeHtml(inv.terms || 'No terms specified.')}</div>
          </div>

          <div style="margin-top:24px;font-size:12px;color:#6b7280;text-align:center">Generated by SHAKTI BILLING SOFTWARE</div>
        </div>
      `;
      if(asPage) return '<!doctype html><html><head><meta charset="utf-8"><title>Invoice Preview</title></head><body>' + html + '</body></html>';
      return html;
    }

    // helper to escape html
    function escapeHtml(str){ if(str === null || str === undefined) return ''; return String(str).replace(/[&<>"']/g, function(c){ return {'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":"&#39;"}[c]; }); }

    // render invoices list (with filter)
    function renderInvoicesList(){
      const tbody = qs('#invoicesList tbody'); tbody.innerHTML='';
      const filter = qs('#invoicesFilter').value || 'all';
      const list = DB.invoices.slice().reverse().filter(inv => (filter === 'all') || (inv.type === filter));
      list.forEach(inv=>{
        const total = inv.lines.reduce((s,l)=> s + (l.qty*l.rate)*(1+(l.tax||0)/100),0) - (inv.discount||0);
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${inv.number}</td><td>${escapeHtml(inv.type)}</td><td>${escapeHtml(inv.customerName)}</td><td>${inv.date}</td><td>₹ ${total.toFixed(2)}</td><td>Saved</td>
          <td><button class="btn ghost" data-action="view" data-id="${inv.id}">View</button> <button class="btn primary" data-action="pdf" data-id="${inv.id}">PDF</button></td>`;
        tbody.appendChild(tr);
      });
    }
    qs('#filterBtn').addEventListener('click', renderInvoicesList);
    // action handlers for invoices list (view / pdf)
    qs('#invoicesList').addEventListener('click', e=>{
      const b = e.target.closest('button'); if(!b) return; const id = b.dataset.id; const act = b.dataset.action; const inv = DB.invoices.find(x=>x.id===id);
      if(!inv) return;
      if(act==='view'){
        // open editor and populate
        document.querySelector('[data-view="sales"]').click(); qs('#invoiceEditor').style.display='block';
        qs('#invNo').value = inv.number; qs('#invDate').value = inv.date; qs('#companyName').value = inv.company; qs('#companyGST').value = inv.companyGST || '';
        qs('#partyInput').value = inv.customerName; qs('#selectedPartyDetails').textContent = '';
        currentLines = JSON.parse(JSON.stringify(inv.lines)); renderInvoiceLines(); updateInvoiceTotals(); qs('#invoiceLinesSection').style.display='block';
      }
      if(act==='pdf'){
        const node = document.createElement('div'); node.style.padding='20px'; node.style.background='white'; node.style.color='#0b1220';
        // build invoice HTML for that saved invoice
        const origCurrentLines = JSON.parse(JSON.stringify(currentLines));
        const prevLines = currentLines;
        // temporarily set currentLines to inv.lines for buildInvoiceHTML convenience
        const savedLines = currentLines = JSON.parse(JSON.stringify(inv.lines));
        const savedDiscount = qs('#invDiscount').value;
        qs('#invDiscount').value = inv.discount || 0;
        node.innerHTML = buildInvoiceHTML(false);
        // restore
        currentLines = origCurrentLines;
        qs('#invDiscount').value = savedDiscount;
        // add UPI QR if any
        if(DB.settings.upi){
          const total = inv.lines.reduce((s,l)=> s + (l.qty*l.rate)*(1+(l.tax||0)/100),0) - (inv.discount||0);
          const upiStr = `upi://pay?pa=${encodeURIComponent(DB.settings.upi)}&pn=${encodeURIComponent(DB.settings.company)}&tn=${encodeURIComponent('Invoice')}&am=${total.toFixed(2)}`;
          const qr = new QRious({value: upiStr, size:160});
          const img = document.createElement('img'); img.src = qr.toDataURL(); img.style.marginTop='12px'; img.style.display='block'; img.style.margin='12px auto';
          node.appendChild(img);
        }
        const opt = { margin: [10, 10, 10, 10], filename:inv.number + '.pdf', image:{type:'jpeg',quality:0.98}, html2canvas:{scale:2}, jsPDF:{unit:'mm',format:'a4',orientation:'portrait'}};
        html2pdf().set(opt).from(node).save();
      }
    });

    // preview recent / stats
    function renderRecentSales(){
      const tbody = qs('#recentSalesTable tbody'); tbody.innerHTML='';
      DB.invoices.slice().reverse().slice(0,8).forEach(inv=>{
        const total = inv.lines.reduce((s,l)=>s + (l.qty*l.rate)*(1+(l.tax||0)/100),0) - (inv.discount||0);
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${inv.number}</td><td>${escapeHtml(inv.customerName)}</td><td>${inv.date}</td><td>₹ ${total.toFixed(2)}</td>`;
        tbody.appendChild(tr);
      });
    }

    function renderStats(){
      const sales = DB.invoices.reduce((s,inv)=> s + inv.lines.reduce((ss,l)=> ss + (l.qty*l.rate)*(1+(l.tax||0)/100),0) - (inv.discount||0),0);
      qs('#statSales').textContent = '₹ ' + sales.toFixed(2);
      const items = DB.items.length; qs('#statItems').textContent = items;
      const receivables = 0; qs('#statReceivables').textContent = '₹ ' + receivables.toFixed(2);
    }

    // export DB
    qs('#exportBtn').addEventListener('click', ()=>{
      const data = JSON.stringify(DB, null, 2); const blob = new Blob([data], {type:'application/json'});
      const url = URL.createObjectURL(blob); const a = document.createElement('a'); a.href = url;
      a.download = 'shakti_backup_' + new Date().toISOString().slice(0,10) + '.json'; a.click(); URL.revokeObjectURL(url);
    });

    // settings
    qs('#settingsCompany').value = DB.settings.company; qs('#settingsCurrency').value = DB.settings.currency; qs('#settingsUpi').value = DB.settings.upi || '';
    qs('#saveSettingsBtn').addEventListener('click', ()=>{
      DB.settings.company = qs('#settingsCompany').value || DB.settings.company;
      DB.settings.currency = qs('#settingsCurrency').value || DB.settings.currency;
      DB.settings.upi = qs('#settingsUpi').value || DB.settings.upi;
      save(); alert('Settings saved');
    });

    // logo upload handling
    qs('#logoUpload').addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (event) => {
          qs('#sidebarLogo').src = event.target.result;
        };
        reader.readAsDataURL(file);
      }
    });

    // helpers
    function escapeHtml(str){ if(str === null || str === undefined) return ''; return String(str).replace(/[&<>"']/g, function(c){ return {'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":"&#39;"}[c]; }); }

    // initial population (ensure UI lists)
    populateDatalists(); renderItems(); renderParties(); renderInvoicesList(); renderRecentSales(); renderStats();

  </script>
</body>
</html>
